<script>
$("button:first").click(function () { // ปุ่มแรก รอ event click
    
    // เมื่อปุ่มแรกถูกคลิก มันจะเรียก function update แล้วส่งค่าปัจจุบันของ span:first ไปให้ประมวลผล
    // function update ประมวลเสร็จก็จะส่งค่ากลับมา แล้วแสดงค่าที่คำนวณได้ที่ span ตัวแรก
    update($("span:first"));
    
});


$("button:last").click(function () { // ปุ่มสุดท้าย รอ event click
    
    // ใช้ trigger, ทำให้ทุกครั้งที่ปุ่มสุดท้ายถูกคลิก trigger ของปุ่มสุดท้าย จะเดินไป click ปุ่มแรกด้วยเสมอ, มันเลยทำให้ span:first เพิ่มขึ้นด้วย ทุกครั้งที่ปุ่มสุดท้ายถูกคลิก
    // เพราะ span:first อยู่ใน button:first ที่ trigger เดินไปคลิก
    $("button:first").trigger('click');
    
    // เมื่อปุ่มสุดท้ายถูกคลิก มันจะเรียก function update แล้วส่งค่าปัจจุบันของ span:last ไปให้ประมวลผล
    // function update ประมวลเสร็จก็จะส่งค่ากลับมา แล้วแสดงค่าที่คำนวณได้ที่ span ตัวสุดท้าย
    update($("span:last")); 
});



//สร้างฟังก์ชั่น update ให้รอรับ parameter เข้ามาประมวลผล, ตั้งชื่อค่าที่จะรับมาว่า j
// j ของ event แรกก็คือ ค่าของ span:first
// j ของ event สองก็คือ ค่าของ span:last
function update(j) {
    // พอค่า j เข้ามาก็แปลงเป็นตัวเลขกลมๆ ซะก่อน เพื่อความชัวร์, ว่าจะไม่มีตัวอักษรหรือทศนิยมปนมา
    // โดยใช้ parseInt(j.text(), 10); <--แปลงเป็นตัวเลขที่มีเลขฐานเป็น 10
    
    // แล้วเอามันใส่ไว้ใน ตัวแปร n ซะ
    var n = parseInt(j.text(), 10); 
       
    //นำตัวเลขกลมๆ ที่ได้จากตัวแปร  n ไป + 1
    //แล้วคืนค่า ไปให้คนที่เรียกใช้มัน, ซึ่งก็คือ button:first และ button:last
    j.text(n + 1);
    
    
    //Flow 1: ตั้ง event รอ ปุ่มแรกถูกคลิกเมื่อไหร่ -> เรียกใช้ function update -> ส่งค่าใน span:first ไปให้ฟังก์ชั่น update ประมวลผล, ซึ่งถ้านั่นคือครั้งแรกก็คือ 0 -> แล้วเอา 0 ที่ได้มาแปลงให้เป็นตัวเลขชัวร์ๆ ทั้งหมดก่อน โดยการใช้ parseInt -> พอได้แล้วก็เอามาเก็บไว้ในตัวแปร n -> แล้วเอาตัวแปร n ไป + 1 -> แล้วส่งค่าคืนไปให้ฟังก์ชั่น update แสดงผล, update($("1")); update($("2")); update($("3"));

    //Flow 2: ต่างกันตรงที่ แทนที่จะนับคลิกของตัวเองอย่างเดียว แต่ดันใช้ trigger เดินไปคลิก button:first ด้วย เลยทำให้ ค่าของปุ่มแรก +1 ทุกครั้งที่ ปุ่มสุดท้ายถูกคลิก
}


//-- parseInt คือเปลี่ยนค่าทั้งหมดให้เป็น Integer, ตัวเลขกลมๆ
//-- ถ้า parseFloat คือเปลี่ยนให้เป็นตัวเลขทั้งหมด แต่ยอมให้มีทศนิยมได้

</script>
<style>
button {
    margin:10px;
}
div {
    font-weight:bold;
    font-size:14px;
    line-height:25px;
}
span {
    color:red;
}

p {
    font-size:10px;
}
</style>
<button>Button #1</button>
<div>ตอนนี้ปุ่มแรกถูกคลิกไป <span>0</span> ครั้ง</div><br>

<button>Button #2</button>
<div>ตอนนี้ปุ่มสุดท้ายถูกคลิกไป <span>0</span> ครั้ง
        <p>(ถ้าคลิกปุ่มนี้ trigger มันจะเดินไปคลิกปุ่มแรกด้วยทุกครั้ง ไอ้บ้า)</p>
</div>